<UserControl
    x:Class="RaceControl.Views.VideoDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:RaceControl.Core.Converters;assembly=RaceControl.Core"
    xmlns:enums="clr-namespace:RaceControl.Enums"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vlc="clr-namespace:LibVLCSharp.WPF;assembly=LibVLCSharp.WPF"
    prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <core:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <Style x:Key="ControlBarButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="MinWidth" Value="50" />
            <Setter Property="MinHeight" Value="21" />
        </Style>
    </UserControl.Resources>
    <prism:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="prism:Dialog.WindowStartupLocation" Value="CenterScreen" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="WindowState" Value="{Binding WindowState}" />
            <Setter Property="ResizeMode" Value="{Binding ResizeMode}" />
            <Setter Property="ShowInTaskbar" Value="True" />
            <Setter Property="Top" Value="{Binding Top, Mode=TwoWay}" />
            <Setter Property="Left" Value="{Binding Left, Mode=TwoWay}" />
            <Setter Property="Width" Value="{Binding Width, Mode=TwoWay}" />
            <Setter Property="Height" Value="{Binding Height, Mode=TwoWay}" />
        </Style>
    </prism:Dialog.WindowStyle>
    <vlc:VideoView MediaPlayer="{Binding MediaPlayer}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Label
                Grid.Row="0"
                Grid.RowSpan="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Content="Casting..."
                FontSize="24"
                Visibility="{Binding IsCasting, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <!--  Non-transparent background is required to capture mouse events  -->
            <Grid Grid.Row="0" Background="#01000000">
                <Button
                    Height="22"
                    Margin="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Command="{Binding CloseWindowCommand}"
                    Content="Close"
                    Style="{StaticResource ControlBarButtonStyle}"
                    ToolTip="Close window"
                    Visibility="{Binding ShowControls, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding MouseDownVideoCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction Command="{Binding MouseMoveVideoCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:InvokeCommandAction Command="{Binding MouseEnterVideoCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding MouseLeaveVideoCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Grid>
            <Grid
                Grid.Row="1"
                Height="Auto"
                Background="White"
                Visibility="{Binding ShowControls, Converter={StaticResource BooleanToVisibilityConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:InvokeCommandAction Command="{Binding MouseEnterControlBarCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding MouseLeaveControlBarCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Margin="4,2"
                        VerticalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="DisplayTime.Hours" />
                                <Binding Path="DisplayTime.Minutes" />
                                <Binding Path="DisplayTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <Slider
                        Grid.Column="1"
                        Margin="2"
                        IsEnabled="{Binding IsLive, Converter={StaticResource InverseBooleanConverter}}"
                        IsMoveToPointEnabled="True"
                        IsSnapToTickEnabled="False"
                        Maximum="{Binding Duration}"
                        TickFrequency="60000"
                        TickPlacement="BottomRight"
                        Value="{Binding SliderTime}" />
                </Grid>
                <Grid
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Button
                            Command="{Binding TogglePauseCommand}"
                            Content="Pause"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Toggle pause" />
                        <Button
                            Command="{Binding ToggleMuteCommand}"
                            Content="Mute"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Toggle mute" />
                        <Button
                            Command="{Binding FastForwardCommand}"
                            CommandParameter="-60"
                            Content="-1 min"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Rewind one minute" />
                        <Button
                            Command="{Binding FastForwardCommand}"
                            CommandParameter="-10"
                            Content="-10 sec"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Rewind ten seconds" />
                        <Button
                            Command="{Binding FastForwardCommand}"
                            CommandParameter="10"
                            Content="+10 sec"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Fast forward ten seconds" />
                        <Button
                            Command="{Binding FastForwardCommand}"
                            CommandParameter="60"
                            Content="+1 min"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Fast forward one minute" />
                        <Button
                            Command="{Binding SyncSessionCommand}"
                            Content="Sync"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Synchronize playback across players *experimental*" />
                    </StackPanel>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Margin="4,2"
                            VerticalAlignment="Center"
                            Text="Audio track:" />
                        <ComboBox
                            Grid.Column="1"
                            Margin="2"
                            DisplayMemberPath="Name"
                            ItemsSource="{Binding AudioTrackDescriptions}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding AudioTrackSelectionChangedCommand}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </Grid>
                </Grid>
                <Grid
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="2"
                    HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        MinWidth="60"
                        Command="{Binding ToggleFullScreenCommand}"
                        Content="Fullscreen"
                        Style="{StaticResource ControlBarButtonStyle}"
                        ToolTip="Toggle fullscreen mode" />
                    <Button
                        Grid.Row="0"
                        Grid.Column="1"
                        MinWidth="25"
                        Command="{Binding MoveAndResizeCommand}"
                        CommandParameter="{x:Static enums:WindowLocation.TopLeft}"
                        Content="TL"
                        Style="{StaticResource ControlBarButtonStyle}"
                        ToolTip="Move window to top left corner of current screen" />
                    <Button
                        Grid.Row="0"
                        Grid.Column="2"
                        MinWidth="25"
                        Command="{Binding MoveAndResizeCommand}"
                        CommandParameter="{x:Static enums:WindowLocation.TopRight}"
                        Content="TR"
                        Style="{StaticResource ControlBarButtonStyle}"
                        ToolTip="Move window to top right corner of current screen" />
                    <Button
                        Grid.Row="1"
                        Grid.Column="1"
                        MinWidth="25"
                        Command="{Binding MoveAndResizeCommand}"
                        CommandParameter="{x:Static enums:WindowLocation.BottomLeft}"
                        Content="BL"
                        Style="{StaticResource ControlBarButtonStyle}"
                        ToolTip="Move window to bottom left corner of current screen" />
                    <Button
                        Grid.Row="1"
                        Grid.Column="2"
                        MinWidth="25"
                        Command="{Binding MoveAndResizeCommand}"
                        CommandParameter="{x:Static enums:WindowLocation.BottomRight}"
                        Content="BR"
                        Style="{StaticResource ControlBarButtonStyle}"
                        ToolTip="Move window to bottom right corner of current screen" />
                </Grid>
                <Grid
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel
                        Grid.Row="1"
                        Margin="2"
                        Orientation="Horizontal">
                        <Button
                            Command="{Binding ScanChromecastCommand}"
                            Content="Scan"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Scan for Chromecast devices in local network" />
                        <Grid>
                            <ComboBox
                                Width="200"
                                Margin="2"
                                DisplayMemberPath="Name"
                                IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                                ItemsSource="{Binding RendererItems}"
                                SelectedItem="{Binding SelectedRendererItem}" />
                            <TextBlock
                                Width="200"
                                Margin="2"
                                Padding="6,0,0,2"
                                VerticalAlignment="Center"
                                IsHitTestVisible="False"
                                Text="Select Chromecast device...">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedRendererItem}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <Button
                            Command="{Binding StartCastVideoCommand}"
                            Content="Cast"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Cast stream to selected Chromecast device" />
                        <Button
                            Command="{Binding StopCastVideoCommand}"
                            Content="Stop"
                            Style="{StaticResource ControlBarButtonStyle}"
                            ToolTip="Stop casting and resume stream in window" />
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </vlc:VideoView>
</UserControl>