<UserControl
    x:Class="RaceControl.Views.VideoDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:RaceControl.Core.Converters;assembly=RaceControl.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vlc="clr-namespace:LibVLCSharp.WPF;assembly=LibVLCSharp.WPF"
    prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <core:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </UserControl.Resources>
    <prism:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="prism:Dialog.WindowStartupLocation" Value="CenterScreen" />
            <Setter Property="WindowStyle" Value="{Binding WindowStyle}" />
            <Setter Property="WindowState" Value="{Binding WindowState}" />
            <Setter Property="ResizeMode" Value="{Binding ResizeMode}" />
            <Setter Property="ShowInTaskbar" Value="True" />
            <Setter Property="Width" Value="1200" />
            <Setter Property="Height" Value="705" />
        </Style>
    </prism:Dialog.WindowStyle>
    <vlc:VideoView MediaPlayer="{Binding MediaPlayer}">
        <Grid>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Label
                Grid.Row="0"
                Grid.RowSpan="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Content="Casting..."
                FontSize="24"
                Visibility="{Binding IsCasting, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <!--  Non-transparent background is required to capture mouse events  -->
            <Grid Grid.Row="0" Background="#01000000">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Grid>
            <Grid
                Grid.Row="1"
                Height="Auto"
                Background="White"
                Visibility="{Binding ShowControls, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Slider
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="4"
                    IsEnabled="{Binding IsLive, Converter={StaticResource InverseBooleanConverter}}"
                    IsMoveToPointEnabled="True"
                    IsSnapToTickEnabled="False"
                    Maximum="{Binding Duration}"
                    TickFrequency="60000"
                    TickPlacement="BottomRight"
                    Value="{Binding SliderTime}" />
                <StackPanel
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="2"
                    Orientation="Horizontal">
                    <TextBlock
                        Width="55"
                        Margin="2"
                        VerticalAlignment="Center"
                        TextAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="DisplayTime.Hours" />
                                <Binding Path="DisplayTime.Minutes" />
                                <Binding Path="DisplayTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding TogglePauseCommand}"
                        Content="Pause"
                        ToolTip="Toggle pause" />
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding ToggleMuteCommand}"
                        Content="Mute"
                        ToolTip="Toggle mute" />
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding FastForwardCommand}"
                        CommandParameter="-60"
                        Content="-1 min"
                        ToolTip="Rewind one minute" />
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding FastForwardCommand}"
                        CommandParameter="-10"
                        Content="-10 sec"
                        ToolTip="Rewind ten seconds" />
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding FastForwardCommand}"
                        CommandParameter="10"
                        Content="+10 sec"
                        ToolTip="Fast forward ten seconds" />
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding FastForwardCommand}"
                        CommandParameter="60"
                        Content="+1 min"
                        ToolTip="Fast forward one minute" />
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding SyncSessionCommand}"
                        Content="Sync"
                        ToolTip="Synchronize playback across players *experimental*" />
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding ToggleFullScreenCommand}"
                        Content="Fullscreen"
                        ToolTip="Toggle fullscreen mode" />
                    <TextBlock
                        Margin="2"
                        VerticalAlignment="Center"
                        Text="Audio"
                        TextAlignment="Center" />
                    <ComboBox
                        Width="175"
                        Margin="2"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding AudioTrackDescriptions}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding AudioTrackSelectionChangedCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </StackPanel>
                <StackPanel
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="2"
                    Orientation="Horizontal">
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding ScanChromecastCommand}"
                        Content="Scan"
                        ToolTip="Scan for Chromecast devices in local network" />
                    <Grid>
                        <ComboBox
                            Width="200"
                            Margin="2"
                            DisplayMemberPath="Name"
                            IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                            ItemsSource="{Binding RendererItems}"
                            SelectedItem="{Binding SelectedRendererItem}" />
                        <TextBlock
                            Width="200"
                            Margin="2"
                            Padding="6,0,0,2"
                            VerticalAlignment="Center"
                            IsHitTestVisible="False"
                            Text="Select Chromecast device...">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedRendererItem}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Button
                        Width="60"
                        Margin="2"
                        Command="{Binding CastVideoCommand}"
                        Content="Cast"
                        ToolTip="Cast stream to selected Chromecast device" />
                </StackPanel>
            </Grid>
        </Grid>
    </vlc:VideoView>
</UserControl>