<Window
    x:Class="RaceControl.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:RaceControl.Core.Converters;assembly=RaceControl.Core"
    xmlns:ctrls="clr-namespace:RaceControl.Core.Controls;assembly=RaceControl.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:prism="http://prismlibrary.com/"
    Width="1200"
    Height="760"
    prism:ViewModelLocator.AutoWireViewModel="True"
    WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <core:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <Style x:Key="HeaderLabelStyle" TargetType="Label">
            <Setter Property="Margin" Value="2" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Background" Value="LightGray" />
        </Style>
        <Style x:Key="ContentListViewStyle" TargetType="ListView">
            <Setter Property="Margin" Value="2" />
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewKeyDown">
            <i:InvokeCommandAction Command="{Binding PreviewKeyDownCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid IsHitTestVisible="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}">
        <ctrls:BusyIndicator Panel.ZIndex="1000" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
        <Grid Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <Label
                Grid.Row="0"
                Grid.Column="0"
                Content="Seasons"
                Style="{StaticResource HeaderLabelStyle}" />
            <ListView
                Grid.Row="1"
                Grid.Column="0"
                ItemsSource="{Binding Seasons}"
                SelectedItem="{Binding SelectedSeason}"
                SelectionMode="Single"
                Style="{StaticResource ContentListViewStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SeasonSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListView>
            <Label
                Grid.Row="0"
                Grid.Column="1"
                Content="Events"
                Style="{StaticResource HeaderLabelStyle}" />
            <ListView
                Grid.Row="1"
                Grid.Column="1"
                ItemsSource="{Binding Events}"
                SelectedItem="{Binding SelectedEvent}"
                SelectionMode="Single"
                Style="{StaticResource ContentListViewStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding EventSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListView>
            <Grid
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="48" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Live Now">
                    <Label.Style>
                        <Style BasedOn="{StaticResource HeaderLabelStyle}" TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasItems, ElementName=LvLiveSessions}" Value="True">
                                    <Setter Property="Background" Value="LightGreen" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <ListView
                    x:Name="LvLiveSessions"
                    Grid.Row="1"
                    ItemsSource="{Binding LiveSessions}"
                    SelectedItem="{Binding SelectedLiveSession}"
                    SelectionMode="Single"
                    Style="{StaticResource ContentListViewStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding LiveSessionSelectionChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
                <Label
                    Grid.Row="2"
                    Content="Sessions"
                    Style="{StaticResource HeaderLabelStyle}" />
                <ListView
                    Grid.Row="3"
                    ItemsSource="{Binding Sessions}"
                    SelectedItem="{Binding SelectedSession}"
                    SelectionMode="Single"
                    Style="{StaticResource ContentListViewStyle}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLive}" Value="True">
                                    <Setter Property="Background" Value="LightGreen" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SessionSelectionChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Grid>
            <Label
                Grid.Row="0"
                Grid.Column="3"
                Content="Channels"
                Style="{StaticResource HeaderLabelStyle}" />
            <ListView
                Grid.Row="1"
                Grid.Column="3"
                HorizontalContentAlignment="Stretch"
                ItemsSource="{Binding Channels}"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectionMode="Single"
                Style="{StaticResource ContentListViewStyle}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding}" />
                            <Button
                                Grid.Column="1"
                                Width="50"
                                Margin="2,0"
                                Command="{Binding DataContext.CopyUrlChannelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="Copy"
                                ToolTip="Copy URL to clipboard" />
                            <Button
                                Grid.Column="2"
                                Width="50"
                                Margin="2,0"
                                Command="{Binding DataContext.WatchVlcChannelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="VLC"
                                ToolTip="Watch with VLC media player" />
                            <Button
                                Grid.Column="3"
                                Width="50"
                                Margin="2,0"
                                Command="{Binding DataContext.WatchMpvChannelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="MPV"
                                ToolTip="Watch with MPV" />
                            <Button
                                Grid.Column="4"
                                Width="50"
                                Margin="2,0,0,0"
                                Command="{Binding DataContext.WatchChannelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="Watch"
                                ToolTip="Watch with internal player" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Label
                Grid.Row="2"
                Grid.Column="0"
                Content="Options"
                Style="{StaticResource HeaderLabelStyle}" />
            <Border
                Grid.Row="3"
                Grid.Column="0"
                Margin="2"
                BorderBrush="#ABADB3"
                BorderThickness="1"
                UseLayoutRounding="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <GroupBox
                        Grid.Row="0"
                        Margin="5,3"
                        Header="Live streaming">
                        <StackPanel Orientation="Vertical">
                            <CheckBox
                                Margin="3"
                                Content="Force lower quality live streams"
                                IsChecked="{Binding LowQualityMode}"
                                ToolTip="Use in case of stuttering caused by low bandwidth connection." />
                            <CheckBox
                                Margin="3"
                                Content="Use alternative CDN for live streams"
                                IsChecked="{Binding UseAlternativeStream}"
                                ToolTip="Use when regular live streams do not work." />
                            <CheckBox
                                Margin="3"
                                Content="Record live streams to file system"
                                IsChecked="{Binding EnableRecording}"
                                ToolTip="Saves a copy of watched live streams to the file system." />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox
                        Grid.Row="1"
                        Margin="5,3"
                        Header="Account">
                        <StackPanel Orientation="Vertical">
                            <Button
                                Height="24"
                                Margin="3"
                                Command="{Binding DeleteCredentialCommand}"
                                Content="Delete saved credentials"
                                ToolTip="Deletes your saved credentials from this system. Use this if you want to use different credentials to login." />
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </Border>
            <Label
                Grid.Row="2"
                Grid.Column="1"
                Content="Video On Demand"
                Style="{StaticResource HeaderLabelStyle}" />
            <ListView
                Grid.Row="3"
                Grid.Column="1"
                ItemsSource="{Binding VodTypes}"
                SelectedItem="{Binding SelectedVodType}"
                SelectionMode="Single"
                Style="{StaticResource ContentListViewStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding VodTypeSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListView>
            <Label
                Grid.Row="2"
                Grid.Column="2"
                Grid.ColumnSpan="2"
                Content="Episodes"
                Style="{StaticResource HeaderLabelStyle}" />
            <ListView
                Grid.Row="3"
                Grid.Column="2"
                Grid.ColumnSpan="2"
                HorizontalContentAlignment="Stretch"
                ItemsSource="{Binding Episodes}"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectionMode="Single"
                Style="{StaticResource ContentListViewStyle}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding}" />
                            <Button
                                Grid.Column="1"
                                Width="50"
                                Margin="2,0"
                                Command="{Binding DataContext.CopyUrlEpisodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="Copy"
                                ToolTip="Copy URL to clipboard" />
                            <Button
                                Grid.Column="2"
                                Width="50"
                                Margin="2,0"
                                Command="{Binding DataContext.WatchVlcEpisodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="VLC"
                                ToolTip="Watch with VLC media player" />
                            <Button
                                Grid.Column="3"
                                Width="50"
                                Margin="2,0"
                                Command="{Binding DataContext.WatchMpvEpisodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="MPV"
                                ToolTip="Watch with MPV" />
                            <Button
                                Grid.Column="4"
                                Width="50"
                                Margin="2,0,0,0"
                                Command="{Binding DataContext.WatchEpisodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                CommandParameter="{Binding}"
                                Content="Watch"
                                ToolTip="Watch with internal player" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
</Window>